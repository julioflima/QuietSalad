import * as React from 'react';
import Svg, {G, Path, Text, TSpan} from 'react-native-svg';
import {IBodyParts} from '../../interfaces/IBodyParts';
import {Container} from './styles';

interface IMuscles {
  deltoidTwo: boolean;
  deltoid: boolean;
  biceps: boolean;
  pectoralis: boolean;
  rectus: boolean;
  pectineus: boolean;
  adductor: boolean;
  tensor: boolean;
  quads: boolean;
}

const BodyFront: React.FC = () => {
  const [muscles, setMuscles] = React.useState<IMuscles>({
    deltoidTwo: false,
    deltoid: false,
    biceps: false,
    pectoralis: false,
    rectus: false,
    pectineus: false,
    adductor: false,
    tensor: false,
    quads: false,
  });

  const bodyParts: IBodyParts<IMuscles>[] = [
    {
      id: 'deltoidTwo',
      paths: [
        {
          d: 'M167.833 76.623c-2.947 4.498-6.049 15.356-7.29 18.613-3.722 2.482-5.739 2.792-5.118-1.551 1.551-13.184 4.032-18.923 9.926-25.438 1.862-2.016 10.082-3.722 15.666-2.326-3.257 1.24-9.151 4.653-13.184 10.702ZM245.386 76.778c2.947 4.498 6.05 15.356 7.29 18.613 3.723 2.482 5.739 2.792 5.119-1.551-1.551-13.184-4.033-18.923-9.927-25.438-1.861-2.016-10.082-3.722-15.666-2.326 3.257 1.24 9.152 4.653 13.184 10.702Z',
        },
      ],
      text: {
        name: 'Deltoid2',

        x: '293.401',
        y: '43.11',
      },
      line: {paths: [{d: 'M251 75.56 301 48'}]},
    },
    {
      id: 'deltoid',
      paths: [
        {
          d: 'M198.234 73.056c-15.045 2.947-28.229 15.356-35.83 20.94 1.551-4.188 4.188-12.099 7.135-16.597 4.809-7.445 12.409-10.392 14.425-11.168 10.237.465 22.026 4.653 14.27 6.825ZM214.986 73.21c14.89 2.948 28.074 15.356 35.829 20.94-1.551-4.188-4.187-12.098-7.135-16.596-4.808-7.445-12.408-10.392-14.425-11.168-10.237.465-22.025 4.653-14.269 6.825Z',
        },
      ],
      text: {
        name: 'Deltoid',
        x: '83.246',
        y: '31.11',
      },
      line: {paths: [{d: 'm119 37 63.5 35'}]},
    },
    {
      id: 'biceps',
      paths: [
        {
          d: 'm156.045 99.114-3.878 33.348s.465 12.564 7.445 10.547c7.135-2.016 17.062-57.7 17.062-57.7-6.359 4.809-12.874 11.788-20.629 13.805ZM256.709 99.114l3.877 33.348s-.465 12.564-7.445 10.547c-6.98-2.016-16.907-57.7-16.907-57.7 6.205 4.809 12.719 11.788 20.475 13.805Z',
        },
      ],
      text: {
        name: 'Biceps',
        x: '86.4008',
        y: '91.11',
      },
      line: {paths: [{d: 'M163 118.047L123 96'}]},
    },
    {
      id: 'pectoralis',
      paths: [
        {
          d: 'M176.674 99.579c1.241 3.102 6.204 9.772 27.764 7.29 1.861-.62.62-32.573.62-32.573s-19.078 1.707-25.903 9.152c-3.412 6.36-3.722 13.029-2.481 16.131ZM235.615 99.579c-1.241 3.102-6.204 9.772-27.764 7.29-1.861-.62-.621-32.573-.621-32.573s19.079 1.707 25.903 9.152c3.413 6.36 3.723 13.029 2.482 16.131Z',
        },
      ],
      text: {
        name: 'PectoralisMajor',
        x: '34.061',
        y: '61.11',
      },
      line: {paths: [{d: 'm124 68 63.5 35'}]},
    },
    {
      id: 'rectus',
      paths: [
        {
          d: 'M194.511 109.506c7.6-.93 15.666-.775 23.887 0 1.085 14.425.775 31.797-.156 50.566-7.29 7.29-16.286 7.6-23.576 0-1.396-19.079-1.706-36.761-.155-50.566Z',
        },
      ],
      text: {
        name: 'RectusAbdominus',
        x: '312.362',
        y: '78.11',
      },
      line: {paths: [{d: 'm316 84-110 60.63'}]},
    },
    {
      id: 'pectineus',
      paths: [
        {
          d: 'M193.89 162.398c.775 3.567 1.861 8.686 2.171 11.633-4.963-6.049-11.788-11.478-19.543-16.752v-2.792c4.498-.31 9.926 3.413 17.372 7.911ZM235.15 153.557v3.722c-7.446 4.188-14.736 10.082-20.009 15.821.62-2.792 1.706-6.825 2.792-10.702 8.22-4.964 13.339-7.6 17.217-8.841Z',
        },
      ],
      text: {
        name: 'Pectineus',
        x: '48.491',
        y: '110.11',
      },
      line: {paths: [{d: 'm103 116 80 44.094'}]},
    },
    {
      id: 'adductor',
      paths: [
        {
          d: 'M182.102 163.949c2.637 27.919 9.927 51.341 11.168 68.247.931 12.254-1.086 20.785 0 21.715 2.482 2.172 10.858-45.601 8.376-67.782-.931-8.065-19.854-25.127-19.544-22.18ZM228.479 163.949c-2.637 27.919-9.927 51.341-11.168 68.247-.931 12.254 1.086 20.785 0 21.715-2.482 2.172-10.858-45.601-8.376-67.782 1.086-8.065 19.854-25.127 19.544-22.18Z',
        },
      ],
      text: {
        name: 'AdductorLongus',
        x: '0.091',
        y: '254.11',
      },
      line: {paths: [{d: 'M193 187 93 242.118'}]},
    },
    {
      id: 'tensor',
      paths: [
        {
          d: 'M180.395 164.104c-1.395 6.514-9.461 21.715-12.563 27.609v-.465c-.621-9.927 4.188-23.732 8.22-33.193.621.775 2.948 3.257 4.343 6.049ZM230.497 164.259c1.396 6.515 9.307 21.715 12.409 27.609v-.465c.62-9.927-3.723-23.266-7.756-32.728-1.085.776-3.877 1.862-4.653 5.584Z',
        },
      ],
      text: {
        name: 'TensorFacieLatae',
        x: '10.254',
        y: '222.11',
      },
      line: {paths: [{d: 'M172.5 175 109 210'}]},
    },
    {
      id: 'quads',
      paths: [
        {
          d: 'M176.519 253.601c-.155 1.707-7.755-41.103-8.531-58.63 2.172-4.033 10.548-21.25 13.184-29.316 1.396 12.874 3.878 32.883 6.515 42.655 2.171 8.376 7.445 46.843.155 43.12-7.135-3.568-11.323 1.396-11.323 2.171ZM234.219 253.601c.155 1.706 7.755-41.103 8.53-58.631-2.171-4.032-10.547-20.629-13.184-28.695-1.396 12.874-3.877 32.263-6.514 42.035-2.172 8.375-7.445 46.842-.155 43.12 6.98-3.568 11.167 1.396 11.323 2.171Z',
        },
      ],
      text: {
        name: 'Quads',
        x: '90.401',
        y: '287.11',
      },
      line: {paths: [{d: 'M182.5 239 119 274'}]},
    },
  ];

  const handleOnPress = (muscle: keyof IMuscles) =>
    setMuscles(oldState => ({...oldState, [muscle]: !oldState[muscle]}));

  return (
    <Container>
      <Svg width={422} height={376} fill="none">
        <G fill="#D6D9E0">
          <Path d="M223.361 19.544c0 10.702-7.755 33.813-17.372 33.813s-17.527-23.111-17.527-33.813C188.462 8.84 196.217 0 205.834 0s17.527 8.686 17.527 19.544Z" />
          <Path d="M216.227 47.153c-2.327 4.808-6.204 7.445-10.082 7.91-3.878-.465-7.6-3.102-10.082-7.91 2.482 14.114-16.131 16.441-16.131 16.441 10.082.31 19.698 3.723 26.213 8.376 6.67-4.653 16.286-8.066 26.213-8.376 0 0-18.613-2.327-16.131-16.441ZM151.08 134.324s-9.927 12.253-10.392 19.233c-.775 12.564-5.894 29.005-5.429 31.642.466 2.637 7.446 4.963 9.152 3.412 1.706-1.551 20.474-47.308 18.613-45.446-3.568 3.257-11.789.465-11.944-8.841Z" />
          <Path d="M144.721 189.852c-4.498 1.086-8.221-.465-11.168-4.343 0 0-6.514 4.653-7.135 4.653-.62 0-3.257 4.964-5.428 5.894-1.396.621-1.241 2.017 0 2.327 2.637.776 7.29-4.033 7.755-3.722.62.465 1.086 2.016 1.086 2.016l-1.551 4.653s-1.862 13.805-.931 15.046c.931 1.24 8.996 3.877 11.633 1.085 2.792-2.792 4.653-14.425 4.653-14.425l1.086-13.184ZM261.827 134.324s9.927 12.253 10.392 19.233c.776 12.564 5.894 29.005 5.429 31.642-.465 2.637-7.445 4.963-9.152 3.412-1.706-1.551-20.474-47.308-18.612-45.446 3.567 3.257 11.788.465 11.943-8.841Z" />
          <Path d="M268.031 189.852c4.498 1.086 8.221-.465 11.168-4.343 0 0 6.515 4.653 7.135 4.653.62 0 3.257 4.964 5.429 5.894 1.396.621 1.241 2.017 0 2.327-2.637.776-7.29-4.033-7.756-3.722-.62.465-1.085 2.016-1.085 2.016l1.551 4.653s1.861 13.805.93 15.046c-.93 1.24-8.996 3.877-11.633 1.085-2.792-2.792-4.653-14.425-4.653-14.425l-1.086-13.184ZM176.674 102.991c4.343 14.891 2.792 31.953 0 49.325 4.498 1.241 10.237 4.188 16.131 7.6-.931-18.613-1.086-36.14 0-50.565-5.894.31-11.943-1.551-16.131-6.36ZM235.769 102.991c-4.343 14.891-2.792 31.953 0 49.325-4.498 1.241-10.237 4.188-16.131 7.6.93-18.613 1.085-36.14 0-50.565 5.894.31 11.943-1.551 16.131-6.36ZM215.915 163.639c-.931 3.412-2.482 8.996-2.792 11.633-2.482 3.102-4.343 6.514-4.963 9.927-2.017 1.24-3.723.93-5.429 0a31.341 31.341 0 0 0-5.119-9.462h.155c.155-1.706-1.24-9.151-2.016-12.564l3.257 1.862c3.723 2.016 10.858 2.481 14.27.155.931-.466 1.861-.931 2.637-1.551ZM179.621 252.981s-3.412 1.861-3.412 4.188c0 2.481-.466 8.375.155 10.082.465 1.706 4.188 6.049 6.669 6.204 2.637.155 8.066 0 9.152-2.947.93-2.947 1.396-10.237.93-11.168-2.637-4.343-9.306-9.151-13.494-6.359ZM174.191 270.198s-2.481 19.388-.155 29.315c2.172 9.617 6.515 42.345 6.515 42.345.31.775 5.429 2.016 5.739.155.155-1.396-1.551-56.459-1.551-56.459-2.172-7.911-6.205-15.046-10.548-15.356ZM194.821 271.749s2.172 17.993 0 27.764c-2.016 9.617-3.722 41.724-3.722 41.724-.621 1.241-4.033 1.862-4.188.776-.155-1.396 0-57.39 0-57.39 2.016-7.911 3.877-12.564 7.91-12.874Z" />
          <Path d="M180.551 342.788v6.049c.465 1.396 10.547 2.327 10.857-.31.155-2.171 0-5.894 0-5.894-3.567 1.241-7.135 1.396-10.857.155Z" />
          <Path d="m180.551 350.234-4.498 14.89s-1.241 1.861-1.396 2.792c0 1.086 1.086 4.033 1.706 4.498 1.241.931 8.842 2.792 10.393 2.637 1.551-.155 4.653-2.792 4.653-3.878 0-1.086-.465-20.629-.465-20.629-3.568 1.241-6.98.62-10.393-.31ZM231.737 252.981s3.412 1.861 3.412 4.188c0 2.481.465 8.375-.155 10.082-.466 1.706-4.188 6.049-6.67 6.204-2.637.155-8.065 0-9.151-2.947-.931-2.947-1.396-10.237-.931-11.168 2.637-4.343 9.307-9.151 13.495-6.359ZM237.165 270.198s2.482 19.388.155 29.315c-2.171 9.617-6.514 42.345-6.514 42.345-.311.775-5.429 2.016-5.739.155-.155-1.396 1.551-56.459 1.551-56.459 2.171-7.911 6.204-15.046 10.547-15.356ZM216.38 271.749s-2.171 17.993 0 27.764c2.017 9.617 3.723 41.724 3.723 41.724.62 1.241 4.033 1.862 4.188.776.155-1.396 0-57.39 0-57.39-1.862-7.911-3.723-12.564-7.911-12.874Z" />
          <Path d="M230.65 342.788v6.049c-.465 1.396-10.547 2.327-10.857-.31-.156-2.171 0-5.894 0-5.894 3.722 1.241 7.29 1.396 10.857.155Z" />
          <Path d="m230.651 350.234 4.498 14.89s1.241 1.861 1.396 2.792c0 1.086-1.086 4.033-1.707 4.498-1.24.931-8.841 2.792-10.392 2.637-1.551-.155-4.653-2.792-4.653-3.878 0-1.086.62-20.629.62-20.629 3.568 1.241 6.98.62 10.238-.31Z" />
        </G>
        <G id="BodyPartsFront">
          {bodyParts.map(part => (
            <G
              key={part.id + 'Parts'}
              id={part.id}
              onPress={() => handleOnPress(part.id)}>
              {part.paths.map((path, index) => (
                <Path key={part.id + 'Paths' + index} d={path.d} fill="#fff" />
              ))}
            </G>
          ))}
          {bodyParts.map(part => (
            <G key={part.id + 'Text' + String(part.line.paths)}>
              {muscles[part.id] && (
                <G fill="#018ABE">
                  <Text fontSize={12} fontWeight={500} letterSpacing={0.2}>
                    <TSpan x={part.text.x} y={part.text.y}>
                      {part.text.name}
                    </TSpan>
                  </Text>
                  {part.line.paths.map((path, index) => (
                    <Path
                      key={part.id + 'LinePaths' + index}
                      d={path.d}
                      stroke="#018ABE"
                      strokeLinecap="round"
                    />
                  ))}
                </G>
              )}
            </G>
          ))}
        </G>
      </Svg>
    </Container>
  );
};

export default BodyFront;
